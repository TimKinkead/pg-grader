{
  "name": "Grader",
  "tagline": "An online platform for scoring student work.",
  "body": "### Project Info\r\n\r\n* Grader is a [Preva Group](http://prevagroup.com) project.\r\n* Live Site: [grader.prevagroup.com](http://grader.prevagroup.com)\r\n* Demo Site: [grader-demo.prevagroup.com](http://grader-demo.prevagroup.com)\r\n* Contributors: @dsoike\r\n\r\n### Development Details\r\n\r\n* This project uses a MEAN stack. ([MongoDB](https://docs.mongodb.com/manual), [Express](https://expressjs.com), [Angular](https://angularjs.org), [Node](https://nodejs.org/en))\r\n* The javascript task runner [Grunt](http://gruntjs.com) is used to compile code.\r\n* The javascript compiler [Babel](https://babeljs.io/) is used to transpile ES2015 javascript.\r\n* Both the live site and demo site are hosted on [AWS](https://aws.amazon.com/) and managed via [OpsWorks](https://console.aws.amazon.com/opsworks/home?region=us-west-2).\r\n\r\n### Getting Started\r\n\r\n* Download [GitHub Desktop](https://desktop.github.com/).\r\n    * Use GitHub Desktop to clone this repository (grader) to your local machine.\r\n* Download an [IDE](http://paulb.gd/comparing-nodejs-ides/)\r\n    * Use your IDE to open the project files.\r\n* Install [MongoDB](https://www.mongodb.org/downloads#production).\r\n    * Use the [MongoDB download page](https://www.mongodb.org/downloads#production).\r\n    * For additional guidance follow a [tutorial](https://docs.mongodb.org/manual/administration/install-community/).\r\n* Install [NodeJS](https://nodejs.org/en/).\r\n    * NodeJS comes with [NPM](https://www.npmjs.com/) (Node Package Manager).\r\n* Install the project dependencies.\r\n    * Open a terminal.\r\n    * Change directory to the project root (wherever GitHub cloned the project). `cd C:\\<yourname>\\Documents\\GitHub\\grader`\r\n    * Install the node package dependencies using [NPM](https://www.npmjs.com/).\r\n        * Run `npm install`.\r\n        * The node package dependencies listed in `package.json` will be installed in the `node_modules` directory.\r\n    * Install the web package dependencies using [Bower](http://bower.io/).\r\n        * Install Bower globally with `npm install bower -g`.\r\n        * Run `bower install`.\r\n        * The web packages listed in `bower.json` will be installed in the `client/lib` directory.\r\n* Install [Grunt](http://gruntjs.com/)'s command line interface globally.\r\n    * Run `npm install grunt-cli -g`.\r\n\r\n### Starting The Application Locally\r\n\r\n* Make sure MongoDB's [mongod process](https://docs.mongodb.org/manual/reference/program/mongod/) is running.\r\n    * Open a terminal.\r\n    * Change directory to MongoDB's install location. `cd C:\\Program Files\\MongoDB\\Server\\3.0\\bin`\r\n    * Start the mongod process with the command `mongod`.\r\n* Start the grader application.\r\n    * Open another terminal.\r\n    * Change directory to the project root (wherever GitHub cloned the project). `cd C:\\<yourname>\\Documents\\GitHub\\grader`\r\n    * Start the application with the command `grunt`.\r\n\r\n### Accessing the Database through the MongoDB Shell\r\n\r\n* Make sure MongoDB's mongod process is running.\r\n    * See above.\r\n* Start the [mongo shell](https://docs.mongodb.org/manual/reference/program/mongo/).\r\n    * Change directory to MongoDB's install location. `cd C:\\Program Files\\MongoDB\\Server\\3.0\\bin`\r\n    * Start the mongo shell with the command `mongo`.\r\n* Note: If you add MongoDB's install location to your path environment variable, you can run `mongod` and `mongo` from any directory.\r\n\r\n### The Project Root Directory\r\n\r\n| Name | Description |\r\n| ---- | ----------- |\r\n| **client** | Directory for the front-end (client-side) angular application. |\r\n| **client-compiled** | Compiled front-end code for running in production. |\r\n| **node_modules** | Directory for the node package project dependencies installed via NPM. |\r\n| **server** | Directory for the back-end (server-side) expressjs application. |\r\n| **server-compiled** | Compiled back-end code for runing in development and production. |\r\n| **tasks** | Directory for grunt tasks that are run with grunt command line tool. |\r\n| **temp** | Directory for temporary files. |\r\n| **.babelrc** | Configuration for the javascript compiler Babel. |\r\n| **.bowerrc** | Configuration for the location where web packages installed via Bower should be saved. |\r\n| **.gitignore** | Configuration for the files that should be ignored when committing to GitHub. |\r\n| **.jshintrc** | Configuration for the 'jshint' grunt task. |\r\n| **auth.js** | All passwords and keys for the APIs that this project uses. |\r\n| **bower.json** | The front-end angular application configuration file. It defines the required bower packages. |\r\n| **config.js** | Configuration file for project information and project files. |\r\n| **gruntfile.js** | This file bundles all of the grunt tasks. |\r\n| **LICENSE** | The project license. |\r\n| **package.json** | The back-end express application configuration file. It defines the required node packages. |\r\n| **README.md** | The file that you're looking at right now! |\r\n| **server.js** | This file starts the server. |\r\n\r\n### Git\r\n\r\n* The project code is hosted on [GitHub](https://github.com/) at [github.com/tselby/pg-grader](https://github.com/tselby/pg-grader).\r\n    * All development is performed on the `master` branch.\r\n    * Code is pushed to the `production` branch via the following terminal commands.\r\n        * `git checkout production` - switch to the production branch\r\n        * `git pull` - sync with the remote production branch\r\n        * `git merge --no-ff master` - merge the master branch into the production branch\r\n        * `grunt production` - compile the code for running in production and start the server for testing purposes\r\n        * `git add .` - stage all changes for commit\r\n        * `git commit -m \"Grunt Production\"` - commit compiled code to production branch\r\n        * `git push` - push changes to the remote production branch\r\n        * `git checkout master` - switch back to the master branch",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}